server:
  port: 8400

spring:
  application:
    name: ${PROJECT_NAME:projectName}
  datasource:
    url: "jdbc:mysql://${app-env.dataBase.host}:${app-env.dataBase.port}/${app-env.dataBase.dbName}?\
        createDatabaseIfNotExist=true\
        &serverTimezone=Asia/Shanghai\
        &useUnicode=true\
        &characterEncoding=UTF-8"
    username: root
    password: mysql

socketio:
  # 后端配置socketio端口，0.0.0.0表示所有端口均可访问
  host: 0.0.0.0
  port: 8271
  # 设置最大每帧处理数据的长度，防止他人利用大数据来攻击服务器
  maxFramePayloadLength: 1048576
  # 设置http交互最大内容长度
  maxHttpContentLength: 1048576
  # socket连接数大小（如只监听一个端口boss线程组为1即可）
  bossCount: 1
  workCount: 100
  allowCustomRequests: true
  # 协议升级超时时间（毫秒），默认10秒。HTTP握手升级为ws协议超时时间
  upgradeTimeout: 1000000
  # Ping消息超时时间（毫秒），默认60秒，这个时间间隔内没有接收到心跳消息就会发送超时事件
  pingTimeout: 6000000
  # Ping消息间隔（毫秒），默认25秒。客户端向服务器发送一条心跳消息间隔
  pingInterval: 25000

mybatis-plus:
  configuration:
    #    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    map-underscore-to-camel-case: true #数据库下划线自动转驼峰

jwt:
  header: "Authorization"
  tokenPrefix: "MyGame"
  secret: "myGame"
  expireTime: 14400 #240hours

app-env:
  dataBase:
    host: ${MYSQL_HOST:localhost}
    port: ${MYSQL_PORT:3306}
    dbName: ${MYSQL_DATABASE:dbName}
  #自定义环境变量
  privateVariable: "variable"
